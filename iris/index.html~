
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
    <link type="text/css" rel="stylesheet" href="style.css"/>
    <script type="text/javascript" src="./d3.v3.min.js"></script>
  </head>
  <body>
    <h1>
     Iris data visualized with parallel coordinates<br>
    </h1>
    <script type="text/javascript">
      var species = [ "versicolor", "setosa", "virginica"],
          attributes = ["sepal length",  "sepal width", "petal length", "petal width"];
      // load data and scale each attributes.
      var x = d3.scale.ordinal().domain(attributes).rangePoints([0, 1280 - 160 - 160]),
          y = {};
      d3.csv("iris.csv", function(flowers) {
        attributes.forEach(function(attr) {
          y[attr] = d3.scale.linear()
              .domain(d3.extent(flowers, function(flwr) { return flwr[attr]; }))
              .range([800 - 80 - 200, 0]);
       });
      // create svg document
      var svg = d3.select("body")
        .append("svg:svg")
          .attr("width", 1280)
          .attr("height",800)
        .append("svg:g")
          .attr("transform", "translate(160,80)");
      // Draw lines.
      var polylines = svg.append("svg:g")
          .attr("class", "polylines")
          .selectAll(".path").data(flowers).enter().append("svg:path") 
            .attr("class", function(data) { return data.species; })
            .attr("d", function (data) {
               return d3.svg.line()(attributes.map(function(attr) { return [x(attr), y[attr](data[attr])]; }));
             });
          
      // Draw footer.
      var footer = svg.selectAll(".footer").data(species).enter().append("svg:g")
          .attr("class", "footer")
          .attr("transform", function(d, i) { return "translate(0," + (i * 20 + 550) + ")"; })
      footer.append("svg:line")
          .attr("class", String)
          .attr("x2", 8);
      footer.append("svg:text")
          .attr("x", 12)
          .attr("dy", ".30em")
          .text(function(flwr) { return "Iris " + flwr; });
      // Draw axis and title.
      var axis = svg.selectAll(".axis").data(attributes).enter().append("svg:g")
          .attr("class", "axis")
          .attr("transform", function(attr) { return "translate(" + x(attr) + ")"; })
          .each(function(attr) { 
             d3.select(this).call(d3.svg.axis().orient("left").scale(y[attr])); }) //auto scale
             .append("svg:text")
                .attr("text-anchor", "middle")
                .attr("y", -9)
                .text(String);
           });
    </script>
  </body>
</html>

